name: Docker Hub

on:
  push:
    branches:
      - develop
  release:
    types:
      - published

jobs:
  publish:
    name: Publish Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      # - uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Prepare Environment
        id: prep
        run: |
          DOCKER_IMAGE=10up/wpsnapshots

          if [ "${{ github.event_name }}" == "release" ]; then
            RELEASE_NAME="${{ github.event.release.name }}"

            TAGS="${DOCKER_IMAGE}:latest"
            TAGS="$TAGS,${DOCKER_IMAGE}:${RELEASE_NAME}"
            TAGS="$TAGS,${DOCKER_IMAGE}:${RELEASE_NAME%%.*}"

            echo "archive=${{ github.event.release.tarball_url }}" >> $GITHUB_OUTPUT
            echo "tags=${TAGS}" >> $GITHUB_OUTPUT
            echo "version=${RELEASE_NAME}" >> $GITHUB_OUTPUT
          else
            ARCHIVE_URL="${{ github.event.repository.archive_url }}"
            ARCHIVE_URL=${ARCHIVE_URL/\{archive_format\}/tarball}
            ARCHIVE_URL=${ARCHIVE_URL/\{\/ref\}/\/$GITHUB_REF}

            echo "archive=${ARCHIVE_URL}" >> $GITHUB_OUTPUT
            echo "tags=${DOCKER_IMAGE}:${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      - uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          context: ./docker
          file: ./docker/Dockerfile
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            WPSNAPSHOTS_ARCHIVE=${{ steps.prep.outputs.archive }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
