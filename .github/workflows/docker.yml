name: Docker Hub

on:
  push:
    branches:
      - develop
  release:
    types:
      - published

jobs:
  publish:
    name: Publish Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            RELEASE_NAME="${{ github.event.release.name }}"

            echo "::set-env name=TARGET_TAGS::latest,${RELEASE_NAME},${RELEASE_NAME%%.*}"
            echo "::set-env name=WPSNAPSHOTS_ARCHIVE::${{ github.event.release.tarball_url }}"
          else
            ARCHIVE_URL="${{ github.event.repository.archive_url }}"
            ARCHIVE_URL=${ARCHIVE_URL/\{archive_format\}/tarball}

            echo "::set-env name=TARGET_TAGS::${GITHUB_REF##*/}"
            echo "::set-env name=WPSNAPSHOTS_ARCHIVE::${ARCHIVE_URL/\{\/ref\}/\/$GITHUB_REF}"
          fi
      - name: Login
        run: echo "$DOCKER_ACCESS_TOKEN" | docker login --username "$DOCKER_USERNAME" --password-stdin
        env:
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Build Image
        run: docker build --tag 10up/wpsnapshots --build-arg WPSNAPSHOTS_ARCHIVE ./docker
      - name: Push Images
        run: |
          IFS=','
          read -a tags <<< "$TARGET_TAGS"
          for tag in "${tags[@]}"; do
            if [ $tag != 'latest' ]; then
              docker tag 10up/wpsnapshots 10up/wpsnapshots:$tag
            fi
            docker push 10up/wpsnapshots:$tag
          done
      - name: Logout
        if: always()
        run: docker logout
